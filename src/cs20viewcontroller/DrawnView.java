/*
 * WARNING: There is nothing in this file for students to edit or change.
 *          This file is intended to have no student-serviceable code.
 *
 * "Draw" your GUI using the "Design" tab, and remember to give
 * them memorable variable names in the "Properties" panel
 * as well as make them public variables.
 * 
 * For convenience, you may want to set the default visibility of 
 * GUI elements to be public by going to:
 *    The NetBeans Preferences or Settings menu -> Miscellaneous -> GUI Builder
 * Then set Variables Modifier to public.
 */
package cs20viewcontroller;

import cs20models.AllModelsForView;
import cs20models.UrlShorcut;
import java.awt.event.KeyEvent;
import java.net.URISyntaxException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * WARNING: Do NOT modify or write any code in this file!
 *
 * @author cheng
 */
public class DrawnView extends AllModelsForView {
    // WARNING: Do NOT modify or write any code in this file!
    // <editor-fold defaultstate="collapsed" desc="Generated Code">

    public DrawnView() {
        initComponents();
    }// </editor-fold>
    boolean a = false;
    boolean b = false;
    boolean c = false;
    boolean d = false;
    boolean e = false;
    boolean f = false;
    boolean g = false;
    boolean h = false;
    boolean i = false;
    boolean j = false;
    boolean k = false;
    boolean l = false;
    boolean m = false;
    boolean n = false;
    boolean o = false;
    boolean p = false;
    boolean q = false;
    boolean r = false;
    boolean s = false;
    boolean t = false;
    boolean u = false;
    boolean v = false;
    boolean w = false;
    boolean x = false;
    boolean y = false;
    boolean z = false;
    boolean one = false;
    boolean two = false;
    boolean three = false;
    boolean four = false;
    boolean five = false;
    boolean six = false;
    boolean seven = false;
    boolean eight = false;
    boolean nine = false;
    boolean zero = false;
    boolean ctrl = false;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genderChooser = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        RankField = new javax.swing.JTextField();
        getPowButton = new javax.swing.JButton();
        serialField = new javax.swing.JTextField();
        setPowInfoButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        powList1 = new javax.swing.JList();
        saveButton = new javax.swing.JButton();
        openButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Letter/ Number");

        jLabel2.setText("Name:");

        jLabel3.setText("Link");

        getPowButton.setText("Get URL");

        serialField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serialFieldActionPerformed(evt);
            }
        });

        setPowInfoButton.setText("Set URL");

        clearButton.setText("Clear");

        jScrollPane1.setViewportView(powList1);

        saveButton.setText("Save");

        openButton.setText("Open");

        jButton1.setText("ShortCut");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });

        jButton2.setText("Update Url List");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(serialField, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(RankField, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(clearButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(getPowButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(setPowInfoButton)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(openButton, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(RankField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(serialField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(getPowButton)
                    .addComponent(setPowInfoButton)
                    .addComponent(openButton)
                    .addComponent(saveButton)
                    .addComponent(clearButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void serialFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serialFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_serialFieldActionPerformed

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
        UrlShorcut url = new UrlShorcut();
        if (evt.getKeyCode() == KeyEvent.VK_CONTROL) {
            ctrl = true;
        } else if (evt.getKeyCode() == KeyEvent.VK_A && ctrl == true) {
            a = true;
        } else if (evt.getKeyCode() == KeyEvent.VK_B && ctrl == true) {
            b = true;
        } else if (evt.getKeyCode() == KeyEvent.VK_C && ctrl == true) {
            c = true;
        } else if (evt.getKeyCode() == KeyEvent.VK_D && ctrl == true) {
            d = true;
        } else if (evt.getKeyCode() == KeyEvent.VK_E && ctrl == true) {
            e = true;
        } else if (evt.getKeyCode() == KeyEvent.VK_F && ctrl == true) {
            f = true;
        } else if (evt.getKeyCode() == KeyEvent.VK_G && ctrl == true) {
            g = true;
        } else if (evt.getKeyCode() == KeyEvent.VK_H && ctrl == true) {
            h = true;
        } else if (evt.getKeyCode() == KeyEvent.VK_I && ctrl == true) {
            i = true;
        } else if (evt.getKeyCode() == KeyEvent.VK_J && ctrl == true) {
            j = true;
        } else if (evt.getKeyCode() == KeyEvent.VK_K && ctrl == true) {
            k = true;
        } else if (evt.getKeyCode() == KeyEvent.VK_L && ctrl == true) {
            l = true;
        } else if (evt.getKeyCode() == KeyEvent.VK_M && ctrl == true) {
            m = true;
        } else if (evt.getKeyCode() == KeyEvent.VK_N && ctrl == true) {
            n = true;
        } else if (evt.getKeyCode() == KeyEvent.VK_O && ctrl == true) {
            o = true;
        } else if (evt.getKeyCode() == KeyEvent.VK_P && ctrl == true) {
            p = true;
        } else if (evt.getKeyCode() == KeyEvent.VK_Q && ctrl == true) {
            q = true;
        } else if (evt.getKeyCode() == KeyEvent.VK_R && ctrl == true) {
            r = true;
        } else if (evt.getKeyCode() == KeyEvent.VK_S && ctrl == true) {
            s = true;
        } else if (evt.getKeyCode() == KeyEvent.VK_T && ctrl == true) {
            t = true;
        } else if (evt.getKeyCode() == KeyEvent.VK_U && ctrl == true) {
            u = true;
        } else if (evt.getKeyCode() == KeyEvent.VK_V && ctrl == true) {
            v = true;
        } else if (evt.getKeyCode() == KeyEvent.VK_W && ctrl == true) {
            w = true;
        } else if (evt.getKeyCode() == KeyEvent.VK_X && ctrl == true) {
            x = true;
        } else if (evt.getKeyCode() == KeyEvent.VK_Y && ctrl == true) {
            y = true;
        } else if (evt.getKeyCode() == KeyEvent.VK_Z && ctrl == true) {
            z = true;
        } else if (evt.getKeyCode() == KeyEvent.VK_1 && ctrl == true) {
            one = true;
        } else if (evt.getKeyCode() == KeyEvent.VK_2 && ctrl == true) {
            two = true;
        } else if (evt.getKeyCode() == KeyEvent.VK_3 && ctrl == true) {
            three = true;
        } else if (evt.getKeyCode() == KeyEvent.VK_4 && ctrl == true) {
            four = true;
        } else if (evt.getKeyCode() == KeyEvent.VK_5 && ctrl == true) {
            five = true;
        } else if (evt.getKeyCode() == KeyEvent.VK_6 && ctrl == true) {
            six = true;
        } else if (evt.getKeyCode() == KeyEvent.VK_7 && ctrl == true) {
            seven = true;
        } else if (evt.getKeyCode() == KeyEvent.VK_8 && ctrl == true) {
            eight = true;
        } else if (evt.getKeyCode() == KeyEvent.VK_9 && ctrl == true) {
            nine = true;
        } else if (evt.getKeyCode() == KeyEvent.VK_0 && ctrl == true) {
            zero = true;
        }

        if (aPowPerson.getaTF() == true) {
            if (a == true && ctrl == true) {
                String urlLink1 = aPowPerson.getaStr();
                try {
                    ShortCutUse.Shortcut(urlLink1);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(DrawnView.class.getName()).log(Level.SEVERE, null, ex);
                }
                ctrl = false;
                a = false;
            }
        }
        if (aPowPerson.getbTF() == true) {
            if (b == true && ctrl == true) {
                String urlLink1 = aPowPerson.getbStr();
                try {
                    ShortCutUse.Shortcut(urlLink1);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(DrawnView.class.getName()).log(Level.SEVERE, null, ex);
                }
                ctrl = false;
                b = false;
            }
        }
        if (aPowPerson.getcTF() == true) {
            if (c == true && ctrl == true) {
                String urlLink1 = aPowPerson.getcStr();
                try {
                    ShortCutUse.Shortcut(urlLink1);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(DrawnView.class.getName()).log(Level.SEVERE, null, ex);
                }
                ctrl = false;
                c = false;
            }
        }
        if (aPowPerson.getdTF() == true) {
            if (d == true && ctrl == true) {
                String urlLink1 = aPowPerson.getdStr();
                try {
                    ShortCutUse.Shortcut(urlLink1);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(DrawnView.class.getName()).log(Level.SEVERE, null, ex);
                }
                ctrl = false;
                d = false;
            }
        }
        if (aPowPerson.geteTF() == true) {
            if (e == true && ctrl == true) {
                String urlLink1 = aPowPerson.geteStr();
                try {
                    ShortCutUse.Shortcut(urlLink1);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(DrawnView.class.getName()).log(Level.SEVERE, null, ex);
                }
                ctrl = false;
                e = false;
            }
        }
        if (aPowPerson.getfTF() == true) {
            if (f == true && ctrl == true) {
                String urlLink1 = aPowPerson.getfStr();
                try {
                    ShortCutUse.Shortcut(urlLink1);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(DrawnView.class.getName()).log(Level.SEVERE, null, ex);
                }
                ctrl = false;
                f = false;
            }
        }
        if (aPowPerson.getgTF() == true) {
            if (g == true && ctrl == true) {
                String urlLink1 = aPowPerson.getgStr();
                try {
                    ShortCutUse.Shortcut(urlLink1);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(DrawnView.class.getName()).log(Level.SEVERE, null, ex);
                }
                ctrl = false;
                g = false;
            }
        }
        if (aPowPerson.gethTF() == true) {
            if (h == true && ctrl == true) {
                String urlLink1 = aPowPerson.gethStr();
                try {
                    ShortCutUse.Shortcut(urlLink1);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(DrawnView.class.getName()).log(Level.SEVERE, null, ex);
                }
                ctrl = false;
                h = false;
            }
        }
        if (aPowPerson.getiTF() == true) {
            if (i == true && ctrl == true) {
                String urlLink1 = aPowPerson.getiStr();
                try {
                    ShortCutUse.Shortcut(urlLink1);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(DrawnView.class.getName()).log(Level.SEVERE, null, ex);
                }
                ctrl = false;
                i = false;
            }
        }
        if (aPowPerson.getjTF() == true) {
            if (j == true && ctrl == true) {
                String urlLink1 = aPowPerson.getjStr();
                try {
                    ShortCutUse.Shortcut(urlLink1);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(DrawnView.class.getName()).log(Level.SEVERE, null, ex);
                }
                ctrl = false;
                j = false;
            }
        }
        if (aPowPerson.getkTF() == true) {
            if (k == true && ctrl == true) {
                String urlLink1 = aPowPerson.getkStr();
                try {
                    ShortCutUse.Shortcut(urlLink1);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(DrawnView.class.getName()).log(Level.SEVERE, null, ex);
                }
                ctrl = false;
                k = false;
            }
        }
        if (aPowPerson.getlTF() == true) {
            if (l == true && ctrl == true) {
                String urlLink1 = aPowPerson.getlStr();
                try {
                    ShortCutUse.Shortcut(urlLink1);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(DrawnView.class.getName()).log(Level.SEVERE, null, ex);
                }
                ctrl = false;
                l = false;
            }
        }
        if (aPowPerson.getmTF() == true) {
            if (m == true && ctrl == true) {
                String urlLink1 = aPowPerson.getmStr();
                try {
                    ShortCutUse.Shortcut(urlLink1);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(DrawnView.class.getName()).log(Level.SEVERE, null, ex);
                }
                ctrl = false;
                m = false;
            }
        }
        if (aPowPerson.getnTF() == true) {
            if (n == true && ctrl == true) {
                String urlLink1 = aPowPerson.getnStr();
                try {
                    ShortCutUse.Shortcut(urlLink1);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(DrawnView.class.getName()).log(Level.SEVERE, null, ex);
                }
                ctrl = false;
                n = false;
            }
        }
        if (aPowPerson.getoTF() == true) {
            if (o == true && ctrl == true) {
                String urlLink1 = aPowPerson.getoStr();
                try {
                    ShortCutUse.Shortcut(urlLink1);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(DrawnView.class.getName()).log(Level.SEVERE, null, ex);
                }
                ctrl = false;
                o = false;
            }
        }
        if (aPowPerson.getpTF() == true) {
            if (p == true && ctrl == true) {
                String urlLink1 = aPowPerson.getpStr();
                try {
                    ShortCutUse.Shortcut(urlLink1);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(DrawnView.class.getName()).log(Level.SEVERE, null, ex);
                }
                ctrl = false;
                p = false;
            }
        }
        if (aPowPerson.getqTF() == true) {
            if (q == true && ctrl == true) {
                String urlLink1 = aPowPerson.getqStr();
                try {
                    ShortCutUse.Shortcut(urlLink1);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(DrawnView.class.getName()).log(Level.SEVERE, null, ex);
                }
                ctrl = false;
                q = false;
            }
        }
        if (aPowPerson.getrTF() == true) {
            if (r == true && ctrl == true) {
                String urlLink1 = aPowPerson.getrStr();
                try {
                    ShortCutUse.Shortcut(urlLink1);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(DrawnView.class.getName()).log(Level.SEVERE, null, ex);
                }
                ctrl = false;
                r = false;
            }
        }
        if (aPowPerson.getsTF() == true) {
            if (s == true && ctrl == true) {
                String urlLink1 = aPowPerson.getsStr();
                try {
                    ShortCutUse.Shortcut(urlLink1);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(DrawnView.class.getName()).log(Level.SEVERE, null, ex);
                }
                ctrl = false;
                s = false;
            }
        }
        if (aPowPerson.gettTF() == true) {
            if (t == true && ctrl == true) {
                String urlLink1 = aPowPerson.gettStr();
                try {
                    ShortCutUse.Shortcut(urlLink1);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(DrawnView.class.getName()).log(Level.SEVERE, null, ex);
                }
                ctrl = false;
                t = false;
            }
        }
        if (aPowPerson.getuTF() == true) {
            if (u == true && ctrl == true) {
                String urlLink1 = aPowPerson.getuStr();
                try {
                    ShortCutUse.Shortcut(urlLink1);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(DrawnView.class.getName()).log(Level.SEVERE, null, ex);
                }
                ctrl = false;
                u = false;
            }
        }
        if (aPowPerson.getvTF() == true) {
            if (v == true && ctrl == true) {
                String urlLink1 = aPowPerson.getvStr();
                try {
                    ShortCutUse.Shortcut(urlLink1);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(DrawnView.class.getName()).log(Level.SEVERE, null, ex);
                }
                ctrl = false;
                v = false;
            }
        }
        if (aPowPerson.getwTF() == true) {
            if (w == true && ctrl == true) {
                String urlLink1 = aPowPerson.getwStr();
                try {
                    ShortCutUse.Shortcut(urlLink1);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(DrawnView.class.getName()).log(Level.SEVERE, null, ex);
                }
                ctrl = false;
                w = false;
            }
        }
        if (aPowPerson.getxTF() == true) {
            if (x == true && ctrl == true) {
                String urlLink1 = aPowPerson.getxStr();
                try {
                    ShortCutUse.Shortcut(urlLink1);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(DrawnView.class.getName()).log(Level.SEVERE, null, ex);
                }
                ctrl = false;
                x = false;
            }
        }
        if (aPowPerson.getyTF() == true) {
            if (y == true && ctrl == true) {
                String urlLink1 = aPowPerson.getyStr();
                try {
                    ShortCutUse.Shortcut(urlLink1);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(DrawnView.class.getName()).log(Level.SEVERE, null, ex);
                }
                ctrl = false;
                y = false;
            }
        }
        if (aPowPerson.getzTF() == true) {
            if (z == true && ctrl == true) {
                String urlLink1 = aPowPerson.getzStr();
                try {
                    ShortCutUse.Shortcut(urlLink1);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(DrawnView.class.getName()).log(Level.SEVERE, null, ex);
                }
                ctrl = false;
                z = false;
            }
        }
        if (aPowPerson.getOneTF() == true) {
            if (one == true && ctrl == true) {
                String urlLink1 = aPowPerson.getOneStr();
                try {
                    ShortCutUse.Shortcut(urlLink1);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(DrawnView.class.getName()).log(Level.SEVERE, null, ex);
                }
                ctrl = false;
                one = false;
            }
        }
        if (aPowPerson.getTwoTF() == true) {
            if (two == true && ctrl == true) {
                String urlLink1 = aPowPerson.getTwoStr();
                try {
                    ShortCutUse.Shortcut(urlLink1);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(DrawnView.class.getName()).log(Level.SEVERE, null, ex);
                }
                ctrl = false;
                two = false;
            }
        }
        if (aPowPerson.getThreeTF() == true) {
            if (three == true && ctrl == true) {
                String urlLink1 = aPowPerson.getThreeStr();
                try {
                    ShortCutUse.Shortcut(urlLink1);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(DrawnView.class.getName()).log(Level.SEVERE, null, ex);
                }
                ctrl = false;
                three = false;
            }
        }
        if (aPowPerson.getFourTF() == true) {
            if (four == true && ctrl == true) {
                String urlLink1 = aPowPerson.getFourStr();
                try {
                    ShortCutUse.Shortcut(urlLink1);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(DrawnView.class.getName()).log(Level.SEVERE, null, ex);
                }
                ctrl = false;
                four = false;
            }
        }
        if (aPowPerson.getFiveTF() == true) {
            if (five == true && ctrl == true) {
                String urlLink1 = aPowPerson.getFiveStr();
                try {
                    ShortCutUse.Shortcut(urlLink1);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(DrawnView.class.getName()).log(Level.SEVERE, null, ex);
                }
                ctrl = false;
                five = false;
            }
        }
        if (aPowPerson.getSixTF() == true) {
            if (six == true && ctrl == true) {
                String urlLink1 = aPowPerson.getSixStr();
                try {
                    ShortCutUse.Shortcut(urlLink1);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(DrawnView.class.getName()).log(Level.SEVERE, null, ex);
                }
                ctrl = false;
                six = false;
            }
        }
        if (aPowPerson.getSevenTF() == true) {
            if (seven == true && ctrl == true) {
                String urlLink1 = aPowPerson.getSevenStr();
                try {
                    ShortCutUse.Shortcut(urlLink1);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(DrawnView.class.getName()).log(Level.SEVERE, null, ex);
                }
                ctrl = false;
                seven = false;
            }
        }
        if (aPowPerson.getEightTF() == true) {
            if (eight == true && ctrl == true) {
                String urlLink1 = aPowPerson.getEightStr();
                try {
                    ShortCutUse.Shortcut(urlLink1);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(DrawnView.class.getName()).log(Level.SEVERE, null, ex);
                }
                ctrl = false;
                eight = false;
            }
        }
        if (aPowPerson.getNineTF() == true) {
            if (nine == true && ctrl == true) {
                String urlLink1 = aPowPerson.getNineStr();
                try {
                    ShortCutUse.Shortcut(urlLink1);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(DrawnView.class.getName()).log(Level.SEVERE, null, ex);
                }
                ctrl = false;
                nine = false;
            }
        }
        if (aPowPerson.getZeroTF() == true) {
            if (zero == true && ctrl == true) {
                String urlLink1 = aPowPerson.getZeroStr();
                try {
                    ShortCutUse.Shortcut(urlLink1);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(DrawnView.class.getName()).log(Level.SEVERE, null, ex);
                }
                ctrl = false;
                zero = false;
            }
        }
    }//GEN-LAST:event_jButton1KeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
    // WARNING: Do NOT modify or write any code in this file!
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField RankField;
    public javax.swing.JButton clearButton;
    public javax.swing.ButtonGroup genderChooser;
    public javax.swing.JButton getPowButton;
    public javax.swing.JButton jButton1;
    public javax.swing.JButton jButton2;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JLabel jLabel2;
    public javax.swing.JLabel jLabel3;
    public javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTextField nameField;
    public javax.swing.JButton openButton;
    public javax.swing.JList powList1;
    public javax.swing.JButton saveButton;
    public javax.swing.JTextField serialField;
    public javax.swing.JButton setPowInfoButton;
    // End of variables declaration//GEN-END:variables
}
